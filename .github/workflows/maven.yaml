name: Build and deploy Acaree to AWS
on:
  push:
    branches: [ "feature/appointment-schedule" ]
  pull_request:
    branches: [ "feature/appointment-schedule" ]
jobs:
  build-deploy:
    name: Build and deploy Acaree to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code into GitHub Actions runner
        uses: actions/checkout@v3

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 19
          cache: maven

      - name: Run unit tests
        run: mvn -B test --file pom.xml

      - name: Build application
        run: mvn clean package --file pom.xml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/apt-schedule:latest

      - name: Render Amazon ECS task definition
        id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          container-name: app
          image: ${{ steps.login-ecr.outputs.registry }}/apt-schedule:latest

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: acaree-service
          cluster: DevKluster
          wait-for-service-stability: true
